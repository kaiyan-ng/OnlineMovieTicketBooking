#pragma checksum "C:\Users\kaiya\source\repos\OnlineMovieTicketBookingApp\OnlineMovieTicketBookingApp\Views\Movie\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "c918475b9dcce74798257812d7be3598fda2f5f9"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Movie_Index), @"mvc.1.0.view", @"/Views/Movie/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c918475b9dcce74798257812d7be3598fda2f5f9", @"/Views/Movie/Index.cshtml")]
    public class Views_Movie_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<IEnumerable<OnlineMovieTicketBookingApp.Models.Movie>>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 3 "C:\Users\kaiya\source\repos\OnlineMovieTicketBookingApp\OnlineMovieTicketBookingApp\Views\Movie\Index.cshtml"
  
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral("<!DOCTYPE html>\r\n<style>\r\n        body {\r\n            background-color: black;\r\n        }\r\n\r\n        .card {\r\n");
            WriteLiteral(@"            /*left: 30px;*/
            top: 20px;
            text-align: center;
            color: white;
            background-color: black;
            font-family: Arial, Helvetica, sans-serif;
            float: left;
            margin: 5px;
        }

        .card-img-top {
            width: 60%;
            height: auto;
            object-fit: cover;
        }


        .card-text {
            font-size: 12px;
        }

        .card-title {
            font-size: 13px;
        }

        .card-link {
            font-size: 12px;
            color: lightsteelblue;
        }

    /* Style the tab */
    /*.tab {
        overflow: hidden;
        border: 1px solid #ccc;
        background-color: #f1f1f1;
    }*/

        /* Style the buttons that are used to open the tab content */
     /*   .tab button {
            background-color: grey;
            float: left;
            border: none;
            outline: none;
            cursor: pointer;
      ");
            WriteLiteral(@"      padding: 14px 16px;
            transition: 0.3s;
            margin:5px;
        }*/

    /* Style the tab content */
    .tabcontent {
        display: none;
        padding: 6px 12px;
        /*border: 1px solid #ccc;*/
        border-top: none;
    }

    .nav-pills > li > a {
        color: white !important;
    }

    .tab {
        margin: 5px;
        left: 10px;
    }
    
    .nav-pills > li > a.active {
        background-color: white !important;
        color: black !important;
    }

    .nav-pills > li > a:hover {
        background-color: gray !important;
        color: white !important;
    }

    /*.nav-link-color {
        color: black !important;
    }*/

    .coming-soon{
        color:black;
    }
</style>

<script>
    function displayMovies(evt, status) {
        // Declare all variables
        var i, tabcontent, tablinks;

        // Get all elements with class=""tabcontent"" and hide them
        tabcontent = document.getElementsByCl");
            WriteLiteral(@"assName(""tabcontent"");
        for (i = 0; i < tabcontent.length; i++) {
            tabcontent[i].style.display = ""none"";
        }

        // Get all elements with class=""tablinks"" and remove the class ""active""
        tablinks = document.getElementsByClassName(""tablinks"");
        for (i = 0; i < tablinks.length; i++) {
            tablinks[i].className = tablinks[i].className.replace("" active"", """");
        }

        // Show the current tab, and add an ""active"" class to the button that opened the tab
        document.getElementById(status).style.display = ""block"";
        evt.currentTarget.className += "" active"";
    }

</script>

<div class=""tab"">
    <ul class=""nav nav-pills mb-3"" id=""pills-tab"" role=""tablist"">
        <li class=""nav-item"">
            <a class=""nav-link active tablinks"" id=""pills-home-tab"" data-toggle=""pill"" href=""#now-showing"" role=""tab"" aria-controls=""pills-home"" aria-selected=""true"" onclick=""displayMovies(event, 'now-showing')"">Now Showing</a>
        </li>
");
            WriteLiteral(@"        <li class=""nav-item"">
            <a class=""nav-link tablinks"" id=""pills-profile-tab"" data-toggle=""pill"" href=""#coming-soon"" role=""tab"" aria-controls=""pills-profile"" aria-selected=""false"" onclick=""displayMovies(event, 'coming-soon')"" >Coming Soon</a>
        </li>
    </ul>
</div>
<div class=""tab-content"" id=""pills-tabContent"">
    <div class=""tab-pane fade show active tabcontent"" id=""now-showing"" role=""tabpanel"" aria-labelledby=""pills-home-tab"">");
#nullable restore
#line 135 "C:\Users\kaiya\source\repos\OnlineMovieTicketBookingApp\OnlineMovieTicketBookingApp\Views\Movie\Index.cshtml"
                                                                                                                   Write(await Html.PartialAsync("_NowShowing"));

#line default
#line hidden
#nullable disable
            WriteLiteral("</div>\r\n    <div class=\"tab-pane fade show tabcontent\" id=\"coming-soon\" role=\"tabpanel\" aria-labelledby=\"pills-profile-tab\">");
#nullable restore
#line 136 "C:\Users\kaiya\source\repos\OnlineMovieTicketBookingApp\OnlineMovieTicketBookingApp\Views\Movie\Index.cshtml"
                                                                                                               Write(await Html.PartialAsync("_ComingSoon"));

#line default
#line hidden
#nullable disable
            WriteLiteral("</div>\r\n</div>\r\n\r\n\r\n");
            WriteLiteral("\r\n\r\n\r\n\r\n\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<IEnumerable<OnlineMovieTicketBookingApp.Models.Movie>> Html { get; private set; }
    }
}
#pragma warning restore 1591
